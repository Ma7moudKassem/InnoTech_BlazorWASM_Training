// <auto-generated />
using System;
using InnoTech_Blazor_Training.Server.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace InnoTech_Blazor_Training.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220703235938_AddSomeConfigurationsAndValidations")]
    partial class AddSomeConfigurationsAndValidations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Empolyee", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("OurEmpoyees", (string)null);
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.ClassRoom", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.HasIndex("SubjectId");

                    b.HasIndex("TeacherId");

                    b.ToTable("ClassRoom", (string)null);
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.ClassRoomStudent", b =>
                {
                    b.Property<Guid>("ClassRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("ClassRoomId", "StudentId");

                    b.HasIndex("StudentId");

                    b.ToTable("ClassRoomStudent", (string)null);
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.Subject", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("SubjectConfiguration ", (string)null);
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.Teacher", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Teacher", (string)null);
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Student", b =>
                {
                    b.Property<Guid?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ClassRoomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("GPA")
                        .HasColumnType("float");

                    b.Property<string>("Grade")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Mobile")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("ClassRoomId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("StudentsTable", (string)null);
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.ClassRoom", b =>
                {
                    b.HasOne("InnoTech_Blazor_Training.Shared.Entities.Subject", "Subject")
                        .WithMany()
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk-classroom-subject");

                    b.HasOne("InnoTech_Blazor_Training.Shared.Entities.Teacher", "Teacher")
                        .WithMany()
                        .HasForeignKey("TeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk-classroom-teacher");

                    b.Navigation("Subject");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.ClassRoomStudent", b =>
                {
                    b.HasOne("InnoTech_Blazor_Training.Shared.Entities.ClassRoom", null)
                        .WithMany("ClassRoomStudent")
                        .HasForeignKey("ClassRoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk-classroom-classroomstudents");

                    b.HasOne("InnoTech_Blazor_Training.Shared.Student", "Student")
                        .WithMany()
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk-classroomstudent-student");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Student", b =>
                {
                    b.HasOne("InnoTech_Blazor_Training.Shared.Entities.ClassRoom", null)
                        .WithMany("Students")
                        .HasForeignKey("ClassRoomId");
                });

            modelBuilder.Entity("InnoTech_Blazor_Training.Shared.Entities.ClassRoom", b =>
                {
                    b.Navigation("ClassRoomStudent");

                    b.Navigation("Students");
                });
#pragma warning restore 612, 618
        }
    }
}
